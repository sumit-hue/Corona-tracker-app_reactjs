{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Card/Card.module.css","images/image1.png"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","active","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","CardComponent","cardTitle","cardSubtitle","Grid","item","xs","md","component","Card","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Info","spacing","justify","infected","App","state","setState","this","image","src","alt","Cards","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52967082.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async(country) => {\n    let changeableUrl = url;\n\n    if (country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n\n    try {\n        const { data: { confirmed, active, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n        return { confirmed, active, recovered, deaths, lastUpdate };\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const fetchDailyData = async() => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n\n        return data.map(({ confirmed, active, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const fetchCountries = async() => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`);\n\n        return countries.map((country) => country.name);\n    } catch (error) {\n        return error;\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Card.module.css';\n\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle }) => (\n  <Grid item xs={12} md={3} component={Card} className={cx(styles.card, className)}>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>\n        {cardTitle}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h2\">\n        <CountUp start={0} end={value} duration={2.75} separator=\",\" />\n      </Typography>\n      <Typography color=\"textSecondary\">\n        {new Date(lastUpdate).toDateString()}\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\">\n        {cardSubtitle}\n      </Typography>\n    </CardContent>\n  </Grid>\n);\n\nexport default CardComponent;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport CardComponent from './Card/Card';\n\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <CardComponent\n          className={styles.infected}\n          cardTitle=\"Confirmed\"\n          value={confirmed.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of active cases from COVID-19.\"\n        />\n        \n        <CardComponent\n          className={styles.recovered}\n          cardTitle=\"Recovered\"\n          value={recovered.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of recoveries from COVID-19.\"\n        />\n        <CardComponent\n          className={styles.deaths}\n          cardTitle=\"Deaths\"\n          value={deaths.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of deaths caused by COVID-19.\"\n        />\n      </Grid>\n    </div>\n  );\n};\nexport default Info;\n","import React from 'react';\n\nimport { Cards, CountryPicker, Chart } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\nimport image from './images/image1.png';\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: '',\n    }\n\n    async componentDidMount() {\n        const data = await fetchData();\n\n        this.setState({ data });\n    }\n\n    handleCountryChange = async(country) => {\n        const data = await fetchData(country);\n\n        this.setState({ data, country: country });\n    }\n\n    render() {\n        const { data, country } = this.state;\n\n        return ( <\n            div className = { styles.container } >\n            <\n            img className = { styles.image }\n            src = { image }\n            alt = \"COVID-19\" / >\n            <\n            Cards data = { data }\n            /> <\n            CountryPicker handleCountryChange = { this.handleCountryChange }\n            /> <\n            Chart data = { data }\n            country = { country }\n            />  < /\n            div >\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__LmsGV\"};","module.exports = __webpack_public_path__ + \"static/media/image1.0b538c3b.png\";"],"sourceRoot":""}